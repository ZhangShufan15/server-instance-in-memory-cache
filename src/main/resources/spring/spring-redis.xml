<?xml version="1.0" encoding="UTF-8"?>
<beans
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:c="http://www.springframework.org/schema/c"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:cache="http://www.springframework.org/schema/cache"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/cache
		http://www.springframework.org/schema/cache/spring-cache.xsd">
 
    <context:component-scan base-package="server.data.cache" />
    <context:property-placeholder location="classpath:redis.properties"/>
 
    <!-- turn on declarative caching -->
    <cache:annotation-driven cache-manager="cacheManager"/>
 
    <bean
        id="jedisConnectionFactory"
        class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="${redis.hostname}"></property>
        <property name="port" value="${redis.port}"></property>
        <property name="password" value="${redis.password}"></property>
    </bean>
 
    <!-- redis template definition -->
    <bean
        id="redisTemplate"
        class="org.springframework.data.redis.core.RedisTemplate"
        p:connection-factory-ref="jedisConnectionFactory" >
        <property name="valueSerializer">
        	<bean class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer" />
        </property>
        <property name="keySerializer">  
	        <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />  
	    </property> 
    </bean>
 
    <!-- declare Redis Cache Manager -->
    <bean
        id="cacheManager"
        class="org.springframework.data.redis.cache.RedisCacheManager">
        <constructor-arg name="redisOperations" ref="redisTemplate" /> 
        <!-- 缓存有效期10分钟 -->
        <property name="defaultExpiration" value="600"></property>
   </bean>
   
   <bean id="redisExpireMessageListener" class="server.data.cache.example.MyReloadMsgListener">  
        <property name="redisTemplate" ref="redisTemplate"></property>
        <property name="dataLoaders">
        	<list>
        		<bean class="server.data.cache.example.MyLoader"></bean>
        	</list>
        </property>
    </bean>  
    <!--  destroy-method="destroy"  暂时去掉这个方法-->
    <bean id="topicContainer" class="org.springframework.data.redis.listener.RedisMessageListenerContainer">  
        <property name="connectionFactory" ref="jedisConnectionFactory"/>  
        <property name="messageListeners">  
            <map>  
                <entry key-ref="redisExpireMessageListener">  
                    <bean class="org.springframework.data.redis.listener.ChannelTopic">  
                        <constructor-arg value="CacheExpireTopic"/>  
                    </bean>  
                </entry>  
            </map>  
        </property>  
    </bean>
</beans>